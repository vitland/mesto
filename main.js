(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e,this._token=n}var n,r;return n=t,(r=[{key:"_getResult",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getUser",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._token}}).then((function(e){return t._getResult(e)}))}},{key:"editUser",value:function(t){var e=this,n=t.name,r=t.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:n,about:r})}).then((function(t){return e._getResult(t)}))}},{key:"editUserAvatar",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify(t)}).then((function(t){return e._getResult(t)}))}},{key:"getCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._token}}).then((function(e){return t._getResult(e)}))}},{key:"addCard",value:function(t){var e=this,n=t.name,r=t.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:n,link:r})}).then((function(t){return e._getResult(t)}))}},{key:"removeCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._token}}).then((function(t){return e._getResult(t)}))}},{key:"addLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:{authorization:this._token}}).then((function(t){return e._getResult(t)}))}},{key:"removeLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:{authorization:this._token}}).then((function(t){return e._getResult(t)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(),r=".elements__template",o=".element__image",i=".element__fav",u={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".popup__submit-button",activeButtonClass:"popup__submit-button_active",inputErrorClass:"form__input-error",errorClass:"form__input-error_visible",inputErrorBorder:"form__input_error"},a=document.querySelector(".profile__avatar-container"),c=document.querySelector(".profile__button-change"),l=document.querySelector(".form__input_type_name"),s=document.querySelector(".form__input_type_occupation"),f=document.querySelector(".profile__button-add"),p=document.forms["profile-form"],y=document.forms["place-form"],m=document.forms["avatar-form"];function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==v(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===v(o)?o:String(o)),r)}var o}var b=function(){function t(e,n,r,u,a,c){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._likeHandler=c,this._cardId=e._id,this._ownerId=e.owner._id,this._currentUser=n,this._templateSelector=r,this._openImagePopup=u,this._openConfirmPopup=a,this.element=this._getTemplate(),this._image=this.element.querySelector(o),this._likeCounter=this.element.querySelector(".element__fav-counter"),this._imageCaption=this.element.querySelector(".element__text"),this._removeIcon=this.element.querySelector(".element__bin"),this._favButton=this.element.querySelector(i)}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var t=this;this.element.querySelector(".element__bin").addEventListener("click",(function(){return t._openConfirmPopup(t._cardId,t.element)})),this.element.querySelector(i).addEventListener("click",(function(e){return t._likeHandler(e,t._cardId,t._likeCounter)})),this.element.querySelector(o).addEventListener("click",(function(e){t._openImagePopup({name:e.target.alt,link:e.target.src})}))}},{key:"generateCard",value:function(){var t=this;return this._currentUser.id===this._ownerId&&this._removeIcon.classList.remove("disabled"),this._likes.find((function(e){return e._id===t._currentUser.id}))&&this._favButton.classList.toggle("element__fav_active"),this._setEventListeners(),this._image.src=this._link,this._image.alt=this._name,this._imageCaption.textContent=this._name,this._likeCounter.textContent=this._likes.length,this.element}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}var g=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(e._container,t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}var E=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o),this.user={}}var e,n;return e=t,(n=[{key:"setUserInfo",value:function(t){t.name&&(this._name.textContent=t.name,this.user.name=t.name),t.about&&(this._about.textContent=t.about,this.user.about=t.about),t._id&&(this._id=t._id,this.user.id=t._id),t.avatar&&(this._avatar.src=t.avatar,this.user.avatar=t.avatar)}},{key:"getUserInfo",value:function(){return this.user}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,O(r.key),r)}}function O(t){var e=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===k(e)?e:String(e)}var P=function(){function t(e){var n,r,o,i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,o=function(t){"Escape"===t.key&&(window.removeEventListener("keydown",i._handleEscClose),i._popup.classList.remove("popup_opened"))},(r=O(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popup=document.querySelector(e)}var e,n;return e=t,(n=[{key:"open",value:function(){window.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){window.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close-icon"))&&t.close()})),window.addEventListener("keydown",this._handleEscClose)}}])&&j(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=R(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},I.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function R(t){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},R(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=R(r);if(o){var n=R(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupImage=e._popup.querySelector(".popup__image"),e._popupImageCaption=e._popup.querySelector(".popup__image-caption"),e}return e=u,(n=[{key:"open",value:function(t){var e=t.name,n=t.link;I(R(u.prototype),"open",this).call(this),console.log(this._popup),this._popupImage.src=n,this._popupImage.alt=e,this._popupImageCaption.textContent=e}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(P);function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function B(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===U(o)?o:String(o)),r)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=D(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},A.apply(this,arguments)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}function D(t){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},D(t)}var z=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=D(r);if(o){var n=D(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===U(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._handleSubmitForm=e,n._form=n._popup.querySelector(".form"),n._inputList=Array.from(n._form.querySelectorAll(".form__input")),n._submitButton=n._form.querySelector(u.submitButtonSelector),n}return e=a,(n=[{key:"_getInputValues",value:function(){return this._inputList.reduce((function(t,e){return t[e.name]=e.value,t}),{})}},{key:"renderLoading",value:function(t){this._submitButton.textContent=t?"Сохранение...":"Сохранить"}},{key:"setEventListeners",value:function(){var t=this;A(D(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleSubmitForm(t._getInputValues())}))}},{key:"close",value:function(){A(D(a.prototype),"close",this).call(this),this._form.reset()}}])&&B(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(P);function V(t){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},V(t)}function N(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==V(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===V(o)?o:String(o)),r)}var o}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=M(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},H.apply(this,arguments)}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}function M(t){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},M(t)}var F=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=M(r);if(o){var n=M(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===V(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._button=n._popup.querySelector(u.submitButtonSelector),n._handleSubmit=e,n}return e=a,(n=[{key:"_setEventListeners",value:function(){var t=this;H(M(a.prototype),"setEventListeners",this).call(this),this._button.addEventListener("mousedown",(function(e){e.preventDefault(),t._handleSubmit(t._cardId,t._element)}))}},{key:"open",value:function(t,e){H(M(a.prototype),"open",this).call(this),this._cardId=t,this._element=e,this._setEventListeners()}}])&&N(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(P);function $(t){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$(t)}function G(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function K(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==$(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===$(o)?o:String(o)),r)}var o}var Q=function(){function t(e,n){var r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._options=e,this._formElement=n,this._inputList=function(t){if(Array.isArray(t))return G(t)}(r=this._formElement.querySelectorAll(this._options.inputSelector))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||function(t,e){if(t){if("string"==typeof t)return G(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(t,e):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._buttonElement=this._formElement.querySelector(this._options.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_setEventListeners",value:function(){var t=this;this._formElement.addEventListener("submit",(function(t){return t.preventDefault()})),this._formElement.addEventListener("reset",(function(){setTimeout((function(){return t.setButtonState()}),0)})),this._formElement.querySelectorAll(this._options.inputSelector).forEach((function(e){return e.addEventListener("input",(function(){t._toggleInputError(e),t.setButtonState()}))}))}},{key:"setButtonState",value:function(){this._getInputStatus(this._inputList)?(this._buttonElement.setAttribute("disabled","disabled"),this._buttonElement.classList.remove(this._options.activeButtonClass)):(this._buttonElement.removeAttribute("disabled","disabled"),this._buttonElement.classList.add(this._options.activeButtonClass))}},{key:"_getInputStatus",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleInputError",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.name,"-input-error"));e.textContent=t.validationMessage,e.classList.add(this._options.errorClass),t.classList.add(this._options.inputErrorBorder)}},{key:"_hideInputError",value:function(t){this._formElement.querySelector(".".concat(t.name,"-input-error")).classList.remove(this._options.errorClass),t.classList.remove(this._options.inputErrorBorder)}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&K(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function W(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var X=new Q(u,p),Y=new Q(u,y),Z=new Q(u,m),tt=new E({nameSelector:".profile__name",jobSelector:".profile__occupation",avatarSelector:".profile__avatar"}),et=new n("https://mesto.nomoreparties.co/v1/cohort-63","bfea2fb3-1d49-4e0a-bbc4-333aa2efb088");Promise.all([et.getUser(),et.getCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,n)||function(t,e){if(t){if("string"==typeof t)return W(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];tt.setUserInfo(o),nt.renderItems(i)})).catch((function(t){return console.log(t)}));var nt=new g({renderer:function(t,e){t.append(rt(e))}},".elements");function rt(t){return new b(t,tt.getUserInfo(),r,(function(t){var e=t.name,n=t.link;return it.open({name:e,link:n})}),(function(t,e){ct.open(t,e)}),(function(t,e,n){t.target.classList.contains("element__fav_active")?et.removeLike(e).then((function(t){n.textContent=t.likes.length})).catch((function(t){return console.log(t)})):et.addLike(e).then((function(t){n.textContent=t.likes.length})).catch((function(t){return console.log(t)})),t.target.classList.toggle("element__fav_active")})).generateCard()}c.addEventListener("mousedown",(function(){var t=tt.getUserInfo(),e=t.name,n=t.about;l.value=e,s.value=n,X.setButtonState(),ut.open()}));var ot=new z(".popup_type_place",(function(t){var e=t.placeName,n=t.placeImage;ot.renderLoading(!0),et.addCard({name:e,link:n}).then((function(t){nt.addItem(rt(t)),ot.close()})).catch((function(t){return console.log(t)})).finally((function(){ot.renderLoading(!1)}))})),it=new q(".popup_type_image"),ut=new z(".popup_type_profile",(function(t){var e=t.name,n=t.about;ut.renderLoading(!0),et.editUser({name:e,about:n}).then((function(t){tt.setUserInfo(t),ut.close()})).catch((function(t){return console.log(t)})).finally((function(){ut.renderLoading(!1)}))})),at=new z(".popup_type_avatar",(function(t){at.renderLoading(!0),et.editUserAvatar(t).then((function(){tt.setUserInfo(t),at.close()})).catch((function(t){return console.log(t)})).finally((function(){at.renderLoading(!1)}))})),ct=new F(".popup_type_confirm",(function(t,e){et.removeCard(t).then((function(){e.remove(),e=null,ct.close()})).catch((function(t){return console.log(t)}))}));f.addEventListener("click",(function(){return ot.open()})),a.addEventListener("mousedown",(function(){return at.open()})),ut.setEventListeners(),ot.setEventListeners(),it.setEventListeners(),at.setEventListeners(),X.enableValidation(),Y.enableValidation(),Z.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,